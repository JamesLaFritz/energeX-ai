services:
  mysql:
    image: mysql:8.0
    container_name: energex_mysql
    environment:
      MYSQL_DATABASE: app
      MYSQL_USER: appuser
      MYSQL_PASSWORD: appsecret
      MYSQL_ROOT_PASSWORD: RootSecret
    ports: ["3306:3306"]
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1"]
      interval: 5s
      timeout: 3s
      retries: 20

  redis:
    image: redis:7-alpine
    container_name: energex_redis
    ports: ["6379:6379"]

  php:
    build:
      context: ../backend-php
      dockerfile: Dockerfile
    container_name: energex_php
    env_file:
      - ../backend-php/.env
    volumes:
      - ../backend-php:/var/www/html
    depends_on:
      - mysql
      - redis
    environment:
      CACHE_DRIVER: redis
      REDIS_CLIENT: predis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_CACHE_DB: 0
  
  nginx:
    image: nginx:alpine
    container_name: energex_nginx
    ports: ["8080:80"]
    volumes:
      - ../backend-php:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      php:
        condition: service_started      # no healthcheck on php, just start-order
      swagger:
        condition: service_started      # or service_healthy if you add a healthcheck
    restart: unless-stopped

  cache-node:
    build:
      context: ../cache-node
      dockerfile: Dockerfile
    container_name: energex_cache_node
    env_file:
      - ../cache-node/.env
    ports: ["4000:4000"]
    depends_on: [mysql, redis]
    environment:
      PORT: 4000
      CACHE_TTL_SECONDS: 3600
      CACHE_PREFIX: lumen_cache
      # Redis
      REDIS_URL: redis://redis:6379
      
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_USER: appuser
      MYSQL_PASSWORD: appsecret
      MYSQL_DB: app
      
      FRONTEND_ORIGIN: http://localhost:5173  
  
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: energex_frontend
    env_file:
      - ../frontend/.env
    ports: ["5173:80"]
    depends_on:
      - nginx

  swagger:
    image: swaggerapi/swagger-ui
    container_name: energex_swagger
    ports: ["8081:8080"]
    environment:
      SWAGGER_JSON: /openapi.yaml
    volumes:
      - ../docs/openapi.yaml:/openapi.yaml:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1:8080/"]
      interval: 10s
      timeout: 3s
      retries: 5

volumes:
  mysql_data: